<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>Login</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>

  <body>
    <form method="post" id="create-form">
      <h4>Sign In</h4>
      <p>Identify yourself to start sending messages.</p>
      <div id="create-form__error-message"></div>
      <label for="name">Email</label>
      <br />
      <input
        name="email"
        type="email"
        autocomplete="off"
        value="francisco_gargiulo@hotmail.com"
        maxlength="255"
        required
      />
      <br />
      <label for="name">Nickname</label>
      <br />
      <input
        type="text"
        name="nickname"
        autocomplete="off"
        value="Francisco"
        required
        maxlength="32"
      />
      <br />
      <br />
      <button type="submit">Send</button>
    </form>

    <form method="post" id="verify-form" style="display: none">
      <h4>Verify your email</h4>
      <p>Enter the one-time password delivered.</p>
      <div id="verify-form__error-message"></div>
      <label for="name">one-time password</label>
      <br />
      <input type="password" name="password" autocomplete="off" required />
      <br />
      <br />
      <button type="submit">Verify</button>
    </form>

    <script>
      const createForm = document.querySelector("#create-form");
      const verifyForm = document.querySelector("#verify-form");

      async function createOTP(email, nickname) {
        try {
          const response = await fetch("http://localhost:3002/create", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              email,
              nickname,
            }),
            credentials: "include",
          });

          if (!response.ok) {
            throw new Error("Invalid login");
          }

          createForm.style.display = "none";
          verifyForm.style.display = "block";
        } catch (error) {
          displayError(error);
        }
      }

      async function verifyOTP(password) {
        try {
          const response = await fetch("http://localhost:3002/verify", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              password,
            }),
            credentials: "include",
          });

          if (!response.ok) {
            throw new Error("Invalid code");
          }

          const redirectURL = new URL("http://localhost:3001/authorize");

          redirectURL.search = window.location.search;

          window.location = redirectURL;
        } catch (error) {
          displayError(error);
        }
      }

      function displayError({ message }) {
        const errorMessage = document.getElementById(
          "create-form__error-message"
        );

        errorMessage.innerHTML = message;
        errorMessage.style.display = "block";
      }

      createForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const email = createForm.querySelector("input[name='email']").value;
        const nickname = createForm.querySelector(
          "input[name='nickname']"
        ).value;

        await createOTP(email, nickname);
      });

      verifyForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const password = verifyForm.querySelector(
          "input[name='password']"
        ).value;

        await verifyOTP(password);
      });
    </script>
  </body>
</html>
